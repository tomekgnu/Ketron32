
Ketron32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005e8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  000005e8  0000067c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000009e  00800084  00800084  000006a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006d0  2**2
                  CONTENTS, READONLY
  5 .debug_info   000004e6  00000000  00000000  0000070c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000004a3  00000000  00000000  00000bf2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000115  00000000  00000000  00001095  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000196  00000000  00000000  000011aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 42 02 	jmp	0x484	; 0x484 <__vector_15>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ee       	ldi	r30, 0xE8	; 232
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 38       	cpi	r26, 0x84	; 132
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a4 e8       	ldi	r26, 0x84	; 132
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 32       	cpi	r26, 0x22	; 34
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 b3 00 	call	0x166	; 0x166 <main>
  8a:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <bufferInit>:
  92:	fc 01       	movw	r30, r24
  94:	8f b7       	in	r24, 0x3f	; 63
  96:	f8 94       	cli
  98:	71 83       	std	Z+1, r23	; 0x01
  9a:	60 83       	st	Z, r22
  9c:	53 83       	std	Z+3, r21	; 0x03
  9e:	42 83       	std	Z+2, r20	; 0x02
  a0:	17 82       	std	Z+7, r1	; 0x07
  a2:	16 82       	std	Z+6, r1	; 0x06
  a4:	15 82       	std	Z+5, r1	; 0x05
  a6:	14 82       	std	Z+4, r1	; 0x04
  a8:	8f bf       	out	0x3f, r24	; 63
  aa:	08 95       	ret

000000ac <bufferGetFromFront>:
  ac:	fc 01       	movw	r30, r24
  ae:	9f b7       	in	r25, 0x3f	; 63
  b0:	f8 94       	cli
  b2:	44 81       	ldd	r20, Z+4	; 0x04
  b4:	55 81       	ldd	r21, Z+5	; 0x05
  b6:	41 15       	cp	r20, r1
  b8:	51 05       	cpc	r21, r1
  ba:	d9 f0       	breq	.+54     	; 0xf2 <bufferGetFromFront+0x46>
  bc:	26 81       	ldd	r18, Z+6	; 0x06
  be:	37 81       	ldd	r19, Z+7	; 0x07
  c0:	a0 81       	ld	r26, Z
  c2:	b1 81       	ldd	r27, Z+1	; 0x01
  c4:	a2 0f       	add	r26, r18
  c6:	b3 1f       	adc	r27, r19
  c8:	8c 91       	ld	r24, X
  ca:	2f 5f       	subi	r18, 0xFF	; 255
  cc:	3f 4f       	sbci	r19, 0xFF	; 255
  ce:	37 83       	std	Z+7, r19	; 0x07
  d0:	26 83       	std	Z+6, r18	; 0x06
  d2:	62 81       	ldd	r22, Z+2	; 0x02
  d4:	73 81       	ldd	r23, Z+3	; 0x03
  d6:	26 17       	cp	r18, r22
  d8:	37 07       	cpc	r19, r23
  da:	30 f4       	brcc	.+12     	; 0xe8 <bufferGetFromFront+0x3c>
  dc:	41 50       	subi	r20, 0x01	; 1
  de:	51 09       	sbc	r21, r1
  e0:	55 83       	std	Z+5, r21	; 0x05
  e2:	44 83       	std	Z+4, r20	; 0x04
  e4:	9f bf       	out	0x3f, r25	; 63
  e6:	08 95       	ret
  e8:	26 1b       	sub	r18, r22
  ea:	37 0b       	sbc	r19, r23
  ec:	37 83       	std	Z+7, r19	; 0x07
  ee:	26 83       	std	Z+6, r18	; 0x06
  f0:	f5 cf       	rjmp	.-22     	; 0xdc <bufferGetFromFront+0x30>
  f2:	80 e0       	ldi	r24, 0x00	; 0
  f4:	9f bf       	out	0x3f, r25	; 63
  f6:	08 95       	ret

000000f8 <bufferAddToEnd>:
  f8:	cf 93       	push	r28
  fa:	fc 01       	movw	r30, r24
  fc:	c6 2f       	mov	r28, r22
  fe:	4f b7       	in	r20, 0x3f	; 63
 100:	f8 94       	cli
 102:	24 81       	ldd	r18, Z+4	; 0x04
 104:	35 81       	ldd	r19, Z+5	; 0x05
 106:	62 81       	ldd	r22, Z+2	; 0x02
 108:	73 81       	ldd	r23, Z+3	; 0x03
 10a:	26 17       	cp	r18, r22
 10c:	37 07       	cpc	r19, r23
 10e:	a0 f4       	brcc	.+40     	; 0x138 <bufferAddToEnd+0x40>
 110:	86 81       	ldd	r24, Z+6	; 0x06
 112:	97 81       	ldd	r25, Z+7	; 0x07
 114:	82 0f       	add	r24, r18
 116:	93 1f       	adc	r25, r19
 118:	0e 94 bc 02 	call	0x578	; 0x578 <__udivmodhi4>
 11c:	a0 81       	ld	r26, Z
 11e:	b1 81       	ldd	r27, Z+1	; 0x01
 120:	a8 0f       	add	r26, r24
 122:	b9 1f       	adc	r27, r25
 124:	cc 93       	st	X, r28
 126:	84 81       	ldd	r24, Z+4	; 0x04
 128:	95 81       	ldd	r25, Z+5	; 0x05
 12a:	01 96       	adiw	r24, 0x01	; 1
 12c:	95 83       	std	Z+5, r25	; 0x05
 12e:	84 83       	std	Z+4, r24	; 0x04
 130:	4f bf       	out	0x3f, r20	; 63
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	cf 91       	pop	r28
 136:	08 95       	ret
 138:	4f bf       	out	0x3f, r20	; 63
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	cf 91       	pop	r28
 13e:	08 95       	ret

00000140 <rx_handler>:
 140:	cf 93       	push	r28
 142:	c8 2f       	mov	r28, r24
 144:	68 2f       	mov	r22, r24
 146:	8e e0       	ldi	r24, 0x0E	; 14
 148:	91 e0       	ldi	r25, 0x01	; 1
 14a:	0e 94 7c 00 	call	0xf8	; 0xf8 <bufferAddToEnd>
 14e:	88 23       	and	r24, r24
 150:	11 f0       	breq	.+4      	; 0x156 <rx_handler+0x16>
 152:	cf 91       	pop	r28
 154:	08 95       	ret
 156:	0e 94 f5 01 	call	0x3ea	; 0x3ea <uartFlushReceiveBuffer>
 15a:	6c 2f       	mov	r22, r28
 15c:	8e e0       	ldi	r24, 0x0E	; 14
 15e:	91 e0       	ldi	r25, 0x01	; 1
 160:	cf 91       	pop	r28
 162:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <bufferAddToEnd>

00000166 <main>:
 166:	cf 93       	push	r28
 168:	df 93       	push	r29
 16a:	00 d0       	rcall	.+0      	; 0x16c <main+0x6>
 16c:	cd b7       	in	r28, 0x3d	; 61
 16e:	de b7       	in	r29, 0x3e	; 62
 170:	1a 82       	std	Y+2, r1	; 0x02
 172:	19 82       	std	Y+1, r1	; 0x01
 174:	0e 94 82 01 	call	0x304	; 0x304 <uartInit>
 178:	0e 94 de 00 	call	0x1bc	; 0x1bc <midiInit>
 17c:	62 e1       	ldi	r22, 0x12	; 18
 17e:	7a e7       	ldi	r23, 0x7A	; 122
 180:	80 e0       	ldi	r24, 0x00	; 0
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	0e 94 ad 01 	call	0x35a	; 0x35a <uartSetBaudRate>
 188:	80 ea       	ldi	r24, 0xA0	; 160
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 a8 01 	call	0x350	; 0x350 <uartSetRxHandler>
 190:	0e 94 f5 01 	call	0x3ea	; 0x3ea <uartFlushReceiveBuffer>
 194:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <uartReceiveBufferIsEmpty>
 198:	81 11       	cpse	r24, r1
 19a:	fc cf       	rjmp	.-8      	; 0x194 <main+0x2e>
 19c:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <uartGetByte>
 1a0:	be 01       	movw	r22, r28
 1a2:	6f 5f       	subi	r22, 0xFF	; 255
 1a4:	7f 4f       	sbci	r23, 0xFF	; 255
 1a6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <readMidiMessage>
 1aa:	81 30       	cpi	r24, 0x01	; 1
 1ac:	99 f7       	brne	.-26     	; 0x194 <main+0x2e>
 1ae:	69 81       	ldd	r22, Y+1	; 0x01
 1b0:	7a 81       	ldd	r23, Y+2	; 0x02
 1b2:	8a e0       	ldi	r24, 0x0A	; 10
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	0e 94 03 02 	call	0x406	; 0x406 <uartSendBuffer>
 1ba:	ec cf       	rjmp	.-40     	; 0x194 <main+0x2e>

000001bc <midiInit>:
 1bc:	81 e0       	ldi	r24, 0x01	; 1
 1be:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <midiState>
 1c2:	08 95       	ret

000001c4 <readMidiMessage>:
 1c4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <midiState>
 1c8:	92 30       	cpi	r25, 0x02	; 2
 1ca:	81 f1       	breq	.+96     	; 0x22c <readMidiMessage+0x68>
 1cc:	93 30       	cpi	r25, 0x03	; 3
 1ce:	39 f1       	breq	.+78     	; 0x21e <readMidiMessage+0x5a>
 1d0:	91 30       	cpi	r25, 0x01	; 1
 1d2:	19 f0       	breq	.+6      	; 0x1da <readMidiMessage+0x16>
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	89 2f       	mov	r24, r25
 1d8:	08 95       	ret
 1da:	80 3f       	cpi	r24, 0xF0	; 240
 1dc:	d9 f3       	breq	.-10     	; 0x1d4 <readMidiMessage+0x10>
 1de:	48 2f       	mov	r20, r24
 1e0:	40 7f       	andi	r20, 0xF0	; 240
 1e2:	40 3f       	cpi	r20, 0xF0	; 240
 1e4:	09 f4       	brne	.+2      	; 0x1e8 <readMidiMessage+0x24>
 1e6:	5c c0       	rjmp	.+184    	; 0x2a0 <readMidiMessage+0xdc>
 1e8:	e0 e6       	ldi	r30, 0x60	; 96
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	90 81       	ld	r25, Z
 1f2:	94 17       	cp	r25, r20
 1f4:	09 f4       	brne	.+2      	; 0x1f8 <readMidiMessage+0x34>
 1f6:	65 c0       	rjmp	.+202    	; 0x2c2 <readMidiMessage+0xfe>
 1f8:	2f 5f       	subi	r18, 0xFF	; 255
 1fa:	3f 4f       	sbci	r19, 0xFF	; 255
 1fc:	32 96       	adiw	r30, 0x02	; 2
 1fe:	22 31       	cpi	r18, 0x12	; 18
 200:	31 05       	cpc	r19, r1
 202:	b1 f7       	brne	.-20     	; 0x1f0 <readMidiMessage+0x2c>
 204:	90 91 84 00 	lds	r25, 0x0084	; 0x800084 <__data_end>
 208:	91 30       	cpi	r25, 0x01	; 1
 20a:	29 f4       	brne	.+10     	; 0x216 <readMidiMessage+0x52>
 20c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <midiEvent+0x1>
 210:	82 e0       	ldi	r24, 0x02	; 2
 212:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <midiReadIndex>
 216:	82 e0       	ldi	r24, 0x02	; 2
 218:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <midiState>
 21c:	db cf       	rjmp	.-74     	; 0x1d4 <readMidiMessage+0x10>
 21e:	87 3f       	cpi	r24, 0xF7	; 247
 220:	c9 f6       	brne	.-78     	; 0x1d4 <readMidiMessage+0x10>
 222:	81 e0       	ldi	r24, 0x01	; 1
 224:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <midiState>
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	d5 cf       	rjmp	.-86     	; 0x1d6 <readMidiMessage+0x12>
 22c:	48 2f       	mov	r20, r24
 22e:	40 7f       	andi	r20, 0xF0	; 240
 230:	40 3f       	cpi	r20, 0xF0	; 240
 232:	a1 f1       	breq	.+104    	; 0x29c <readMidiMessage+0xd8>
 234:	a0 e6       	ldi	r26, 0x60	; 96
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	fd 01       	movw	r30, r26
 23a:	20 e0       	ldi	r18, 0x00	; 0
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	90 81       	ld	r25, Z
 240:	94 17       	cp	r25, r20
 242:	81 f1       	breq	.+96     	; 0x2a4 <readMidiMessage+0xe0>
 244:	2f 5f       	subi	r18, 0xFF	; 255
 246:	3f 4f       	sbci	r19, 0xFF	; 255
 248:	32 96       	adiw	r30, 0x02	; 2
 24a:	22 31       	cpi	r18, 0x12	; 18
 24c:	31 05       	cpc	r19, r1
 24e:	b9 f7       	brne	.-18     	; 0x23e <readMidiMessage+0x7a>
 250:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <midiReadIndex>
 254:	41 e0       	ldi	r20, 0x01	; 1
 256:	4e 0f       	add	r20, r30
 258:	40 93 08 01 	sts	0x0108, r20	; 0x800108 <midiReadIndex>
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	e6 5f       	subi	r30, 0xF6	; 246
 260:	fe 4f       	sbci	r31, 0xFE	; 254
 262:	80 83       	st	Z, r24
 264:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <midiEvent>
 268:	30 7f       	andi	r19, 0xF0	; 240
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	2c 91       	ld	r18, X
 270:	32 17       	cp	r19, r18
 272:	c1 f1       	breq	.+112    	; 0x2e4 <readMidiMessage+0x120>
 274:	01 96       	adiw	r24, 0x01	; 1
 276:	12 96       	adiw	r26, 0x02	; 2
 278:	82 31       	cpi	r24, 0x12	; 18
 27a:	91 05       	cpc	r25, r1
 27c:	c1 f7       	brne	.-16     	; 0x26e <readMidiMessage+0xaa>
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	48 13       	cpse	r20, r24
 282:	a8 cf       	rjmp	.-176    	; 0x1d4 <readMidiMessage+0x10>
 284:	91 e0       	ldi	r25, 0x01	; 1
 286:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <midiState>
 28a:	fb 01       	movw	r30, r22
 28c:	40 83       	st	Z, r20
 28e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <midiEvent>
 292:	80 79       	andi	r24, 0x90	; 144
 294:	71 f1       	breq	.+92     	; 0x2f2 <readMidiMessage+0x12e>
 296:	90 93 84 00 	sts	0x0084, r25	; 0x800084 <__data_end>
 29a:	9d cf       	rjmp	.-198    	; 0x1d6 <readMidiMessage+0x12>
 29c:	48 2f       	mov	r20, r24
 29e:	ca cf       	rjmp	.-108    	; 0x234 <readMidiMessage+0x70>
 2a0:	48 2f       	mov	r20, r24
 2a2:	a2 cf       	rjmp	.-188    	; 0x1e8 <readMidiMessage+0x24>
 2a4:	22 0f       	add	r18, r18
 2a6:	33 1f       	adc	r19, r19
 2a8:	f9 01       	movw	r30, r18
 2aa:	e0 5a       	subi	r30, 0xA0	; 160
 2ac:	ff 4f       	sbci	r31, 0xFF	; 255
 2ae:	91 81       	ldd	r25, Z+1	; 0x01
 2b0:	99 23       	and	r25, r25
 2b2:	71 f2       	breq	.-100    	; 0x250 <readMidiMessage+0x8c>
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <midiState>
 2ba:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__data_end>
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	8a cf       	rjmp	.-236    	; 0x1d6 <readMidiMessage+0x12>
 2c2:	22 0f       	add	r18, r18
 2c4:	33 1f       	adc	r19, r19
 2c6:	f9 01       	movw	r30, r18
 2c8:	e0 5a       	subi	r30, 0xA0	; 160
 2ca:	ff 4f       	sbci	r31, 0xFF	; 255
 2cc:	91 81       	ldd	r25, Z+1	; 0x01
 2ce:	91 30       	cpi	r25, 0x01	; 1
 2d0:	91 f0       	breq	.+36     	; 0x2f6 <readMidiMessage+0x132>
 2d2:	99 23       	and	r25, r25
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <readMidiMessage+0x114>
 2d6:	96 cf       	rjmp	.-212    	; 0x204 <readMidiMessage+0x40>
 2d8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <midiEvent>
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <midiReadIndex>
 2e2:	99 cf       	rjmp	.-206    	; 0x216 <readMidiMessage+0x52>
 2e4:	88 0f       	add	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	fc 01       	movw	r30, r24
 2ea:	e0 5a       	subi	r30, 0xA0	; 160
 2ec:	ff 4f       	sbci	r31, 0xFF	; 255
 2ee:	81 81       	ldd	r24, Z+1	; 0x01
 2f0:	c7 cf       	rjmp	.-114    	; 0x280 <readMidiMessage+0xbc>
 2f2:	91 e0       	ldi	r25, 0x01	; 1
 2f4:	70 cf       	rjmp	.-288    	; 0x1d6 <readMidiMessage+0x12>
 2f6:	fb 01       	movw	r30, r22
 2f8:	90 83       	st	Z, r25
 2fa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <midiEvent>
 2fe:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__data_end>
 302:	69 cf       	rjmp	.-302    	; 0x1d6 <readMidiMessage+0x12>

00000304 <uartInit>:
 304:	40 e4       	ldi	r20, 0x40	; 64
 306:	50 e0       	ldi	r21, 0x00	; 0
 308:	67 ec       	ldi	r22, 0xC7	; 199
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	8e e0       	ldi	r24, 0x0E	; 14
 30e:	91 e0       	ldi	r25, 0x01	; 1
 310:	0e 94 49 00 	call	0x92	; 0x92 <bufferInit>
 314:	40 e4       	ldi	r20, 0x40	; 64
 316:	50 e0       	ldi	r21, 0x00	; 0
 318:	67 e8       	ldi	r22, 0x87	; 135
 31a:	70 e0       	ldi	r23, 0x00	; 0
 31c:	88 e1       	ldi	r24, 0x18	; 24
 31e:	91 e0       	ldi	r25, 0x01	; 1
 320:	0e 94 49 00 	call	0x92	; 0x92 <bufferInit>
 324:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <UartRxFunc+0x1>
 328:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <UartRxFunc>
 32c:	88 ed       	ldi	r24, 0xD8	; 216
 32e:	8a b9       	out	0x0a, r24	; 10
 330:	86 e8       	ldi	r24, 0x86	; 134
 332:	80 bd       	out	0x20, r24	; 32
 334:	87 e6       	ldi	r24, 0x67	; 103
 336:	89 b9       	out	0x09, r24	; 9
 338:	10 bc       	out	0x20, r1	; 32
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <uartReadyTx>
 340:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <uartBufferedTx>
 344:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <uartRxOverflow+0x1>
 348:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <uartRxOverflow>
 34c:	78 94       	sei
 34e:	08 95       	ret

00000350 <uartSetRxHandler>:
 350:	90 93 86 00 	sts	0x0086, r25	; 0x800086 <UartRxFunc+0x1>
 354:	80 93 85 00 	sts	0x0085, r24	; 0x800085 <UartRxFunc>
 358:	08 95       	ret

0000035a <uartSetBaudRate>:
 35a:	0f 93       	push	r16
 35c:	1f 93       	push	r17
 35e:	8b 01       	movw	r16, r22
 360:	9c 01       	movw	r18, r24
 362:	dc 01       	movw	r26, r24
 364:	cb 01       	movw	r24, r22
 366:	80 58       	subi	r24, 0x80	; 128
 368:	9b 47       	sbci	r25, 0x7B	; 123
 36a:	a1 4e       	sbci	r26, 0xE1	; 225
 36c:	bf 4f       	sbci	r27, 0xFF	; 255
 36e:	88 0f       	add	r24, r24
 370:	99 1f       	adc	r25, r25
 372:	aa 1f       	adc	r26, r26
 374:	bb 1f       	adc	r27, r27
 376:	88 0f       	add	r24, r24
 378:	99 1f       	adc	r25, r25
 37a:	aa 1f       	adc	r26, r26
 37c:	bb 1f       	adc	r27, r27
 37e:	bc 01       	movw	r22, r24
 380:	cd 01       	movw	r24, r26
 382:	66 0f       	add	r22, r22
 384:	77 1f       	adc	r23, r23
 386:	88 1f       	adc	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	00 0f       	add	r16, r16
 38c:	11 1f       	adc	r17, r17
 38e:	22 1f       	adc	r18, r18
 390:	33 1f       	adc	r19, r19
 392:	00 0f       	add	r16, r16
 394:	11 1f       	adc	r17, r17
 396:	22 1f       	adc	r18, r18
 398:	33 1f       	adc	r19, r19
 39a:	a9 01       	movw	r20, r18
 39c:	98 01       	movw	r18, r16
 39e:	22 0f       	add	r18, r18
 3a0:	33 1f       	adc	r19, r19
 3a2:	44 1f       	adc	r20, r20
 3a4:	55 1f       	adc	r21, r21
 3a6:	22 0f       	add	r18, r18
 3a8:	33 1f       	adc	r19, r19
 3aa:	44 1f       	adc	r20, r20
 3ac:	55 1f       	adc	r21, r21
 3ae:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__udivmodsi4>
 3b2:	21 50       	subi	r18, 0x01	; 1
 3b4:	31 09       	sbc	r19, r1
 3b6:	29 b9       	out	0x09, r18	; 9
 3b8:	30 bd       	out	0x20, r19	; 32
 3ba:	1f 91       	pop	r17
 3bc:	0f 91       	pop	r16
 3be:	08 95       	ret

000003c0 <uartGetByte>:
 3c0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <uartRxBuffer+0x2>
 3c4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <uartRxBuffer+0x3>
 3c8:	89 2b       	or	r24, r25
 3ca:	31 f0       	breq	.+12     	; 0x3d8 <uartGetByte+0x18>
 3cc:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <uartRxBuffer+0x4>
 3d0:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <uartRxBuffer+0x5>
 3d4:	89 2b       	or	r24, r25
 3d6:	19 f4       	brne	.+6      	; 0x3de <uartGetByte+0x1e>
 3d8:	8f ef       	ldi	r24, 0xFF	; 255
 3da:	9f ef       	ldi	r25, 0xFF	; 255
 3dc:	08 95       	ret
 3de:	8e e0       	ldi	r24, 0x0E	; 14
 3e0:	91 e0       	ldi	r25, 0x01	; 1
 3e2:	0e 94 56 00 	call	0xac	; 0xac <bufferGetFromFront>
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	08 95       	ret

000003ea <uartFlushReceiveBuffer>:
 3ea:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <uartRxBuffer+0x5>
 3ee:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <uartRxBuffer+0x4>
 3f2:	08 95       	ret

000003f4 <uartReceiveBufferIsEmpty>:
 3f4:	81 e0       	ldi	r24, 0x01	; 1
 3f6:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <uartRxBuffer+0x4>
 3fa:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <uartRxBuffer+0x5>
 3fe:	23 2b       	or	r18, r19
 400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	08 95       	ret

00000406 <uartSendBuffer>:
 406:	ff 92       	push	r15
 408:	0f 93       	push	r16
 40a:	1f 93       	push	r17
 40c:	cf 93       	push	r28
 40e:	df 93       	push	r29
 410:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <uartTxBuffer+0x4>
 414:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <uartTxBuffer+0x5>
 418:	26 0f       	add	r18, r22
 41a:	37 1f       	adc	r19, r23
 41c:	40 91 1a 01 	lds	r20, 0x011A	; 0x80011a <uartTxBuffer+0x2>
 420:	50 91 1b 01 	lds	r21, 0x011B	; 0x80011b <uartTxBuffer+0x3>
 424:	24 17       	cp	r18, r20
 426:	35 07       	cpc	r19, r21
 428:	30 f5       	brcc	.+76     	; 0x476 <uartSendBuffer+0x70>
 42a:	61 15       	cp	r22, r1
 42c:	71 05       	cpc	r23, r1
 42e:	19 f1       	breq	.+70     	; 0x476 <uartSendBuffer+0x70>
 430:	ec 01       	movw	r28, r24
 432:	21 96       	adiw	r28, 0x01	; 1
 434:	fc 01       	movw	r30, r24
 436:	f0 80       	ld	r15, Z
 438:	61 30       	cpi	r22, 0x01	; 1
 43a:	71 05       	cpc	r23, r1
 43c:	59 f0       	breq	.+22     	; 0x454 <uartSendBuffer+0x4e>
 43e:	8c 01       	movw	r16, r24
 440:	06 0f       	add	r16, r22
 442:	17 1f       	adc	r17, r23
 444:	69 91       	ld	r22, Y+
 446:	88 e1       	ldi	r24, 0x18	; 24
 448:	91 e0       	ldi	r25, 0x01	; 1
 44a:	0e 94 7c 00 	call	0xf8	; 0xf8 <bufferAddToEnd>
 44e:	c0 17       	cp	r28, r16
 450:	d1 07       	cpc	r29, r17
 452:	c1 f7       	brne	.-16     	; 0x444 <uartSendBuffer+0x3e>
 454:	81 e0       	ldi	r24, 0x01	; 1
 456:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <uartBufferedTx>
 45a:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <uartReadyTx>
 45e:	88 23       	and	r24, r24
 460:	e1 f3       	breq	.-8      	; 0x45a <uartSendBuffer+0x54>
 462:	fc b8       	out	0x0c, r15	; 12
 464:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <uartReadyTx>
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	df 91       	pop	r29
 46c:	cf 91       	pop	r28
 46e:	1f 91       	pop	r17
 470:	0f 91       	pop	r16
 472:	ff 90       	pop	r15
 474:	08 95       	ret
 476:	80 e0       	ldi	r24, 0x00	; 0
 478:	df 91       	pop	r29
 47a:	cf 91       	pop	r28
 47c:	1f 91       	pop	r17
 47e:	0f 91       	pop	r16
 480:	ff 90       	pop	r15
 482:	08 95       	ret

00000484 <__vector_15>:
 484:	1f 92       	push	r1
 486:	0f 92       	push	r0
 488:	0f b6       	in	r0, 0x3f	; 63
 48a:	0f 92       	push	r0
 48c:	11 24       	eor	r1, r1
 48e:	2f 93       	push	r18
 490:	3f 93       	push	r19
 492:	4f 93       	push	r20
 494:	5f 93       	push	r21
 496:	6f 93       	push	r22
 498:	7f 93       	push	r23
 49a:	8f 93       	push	r24
 49c:	9f 93       	push	r25
 49e:	af 93       	push	r26
 4a0:	bf 93       	push	r27
 4a2:	ef 93       	push	r30
 4a4:	ff 93       	push	r31
 4a6:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <uartBufferedTx>
 4aa:	88 23       	and	r24, r24
 4ac:	61 f0       	breq	.+24     	; 0x4c6 <__vector_15+0x42>
 4ae:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <uartTxBuffer+0x4>
 4b2:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <uartTxBuffer+0x5>
 4b6:	89 2b       	or	r24, r25
 4b8:	d1 f4       	brne	.+52     	; 0x4ee <__vector_15+0x6a>
 4ba:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <uartBufferedTx>
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <uartReadyTx>
 4c4:	03 c0       	rjmp	.+6      	; 0x4cc <__vector_15+0x48>
 4c6:	81 e0       	ldi	r24, 0x01	; 1
 4c8:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <uartReadyTx>
 4cc:	ff 91       	pop	r31
 4ce:	ef 91       	pop	r30
 4d0:	bf 91       	pop	r27
 4d2:	af 91       	pop	r26
 4d4:	9f 91       	pop	r25
 4d6:	8f 91       	pop	r24
 4d8:	7f 91       	pop	r23
 4da:	6f 91       	pop	r22
 4dc:	5f 91       	pop	r21
 4de:	4f 91       	pop	r20
 4e0:	3f 91       	pop	r19
 4e2:	2f 91       	pop	r18
 4e4:	0f 90       	pop	r0
 4e6:	0f be       	out	0x3f, r0	; 63
 4e8:	0f 90       	pop	r0
 4ea:	1f 90       	pop	r1
 4ec:	18 95       	reti
 4ee:	88 e1       	ldi	r24, 0x18	; 24
 4f0:	91 e0       	ldi	r25, 0x01	; 1
 4f2:	0e 94 56 00 	call	0xac	; 0xac <bufferGetFromFront>
 4f6:	8c b9       	out	0x0c, r24	; 12
 4f8:	e9 cf       	rjmp	.-46     	; 0x4cc <__vector_15+0x48>

000004fa <__vector_13>:
 4fa:	1f 92       	push	r1
 4fc:	0f 92       	push	r0
 4fe:	0f b6       	in	r0, 0x3f	; 63
 500:	0f 92       	push	r0
 502:	11 24       	eor	r1, r1
 504:	2f 93       	push	r18
 506:	3f 93       	push	r19
 508:	4f 93       	push	r20
 50a:	5f 93       	push	r21
 50c:	6f 93       	push	r22
 50e:	7f 93       	push	r23
 510:	8f 93       	push	r24
 512:	9f 93       	push	r25
 514:	af 93       	push	r26
 516:	bf 93       	push	r27
 518:	ef 93       	push	r30
 51a:	ff 93       	push	r31
 51c:	8c b1       	in	r24, 0x0c	; 12
 51e:	20 91 85 00 	lds	r18, 0x0085	; 0x800085 <UartRxFunc>
 522:	30 91 86 00 	lds	r19, 0x0086	; 0x800086 <UartRxFunc+0x1>
 526:	23 2b       	or	r18, r19
 528:	b1 f0       	breq	.+44     	; 0x556 <__vector_13+0x5c>
 52a:	e0 91 85 00 	lds	r30, 0x0085	; 0x800085 <UartRxFunc>
 52e:	f0 91 86 00 	lds	r31, 0x0086	; 0x800086 <UartRxFunc+0x1>
 532:	09 95       	icall
 534:	ff 91       	pop	r31
 536:	ef 91       	pop	r30
 538:	bf 91       	pop	r27
 53a:	af 91       	pop	r26
 53c:	9f 91       	pop	r25
 53e:	8f 91       	pop	r24
 540:	7f 91       	pop	r23
 542:	6f 91       	pop	r22
 544:	5f 91       	pop	r21
 546:	4f 91       	pop	r20
 548:	3f 91       	pop	r19
 54a:	2f 91       	pop	r18
 54c:	0f 90       	pop	r0
 54e:	0f be       	out	0x3f, r0	; 63
 550:	0f 90       	pop	r0
 552:	1f 90       	pop	r1
 554:	18 95       	reti
 556:	68 2f       	mov	r22, r24
 558:	8e e0       	ldi	r24, 0x0E	; 14
 55a:	91 e0       	ldi	r25, 0x01	; 1
 55c:	0e 94 7c 00 	call	0xf8	; 0xf8 <bufferAddToEnd>
 560:	81 11       	cpse	r24, r1
 562:	e8 cf       	rjmp	.-48     	; 0x534 <__vector_13+0x3a>
 564:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <uartRxOverflow>
 568:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <uartRxOverflow+0x1>
 56c:	01 96       	adiw	r24, 0x01	; 1
 56e:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <uartRxOverflow+0x1>
 572:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <uartRxOverflow>
 576:	de cf       	rjmp	.-68     	; 0x534 <__vector_13+0x3a>

00000578 <__udivmodhi4>:
 578:	aa 1b       	sub	r26, r26
 57a:	bb 1b       	sub	r27, r27
 57c:	51 e1       	ldi	r21, 0x11	; 17
 57e:	07 c0       	rjmp	.+14     	; 0x58e <__udivmodhi4_ep>

00000580 <__udivmodhi4_loop>:
 580:	aa 1f       	adc	r26, r26
 582:	bb 1f       	adc	r27, r27
 584:	a6 17       	cp	r26, r22
 586:	b7 07       	cpc	r27, r23
 588:	10 f0       	brcs	.+4      	; 0x58e <__udivmodhi4_ep>
 58a:	a6 1b       	sub	r26, r22
 58c:	b7 0b       	sbc	r27, r23

0000058e <__udivmodhi4_ep>:
 58e:	88 1f       	adc	r24, r24
 590:	99 1f       	adc	r25, r25
 592:	5a 95       	dec	r21
 594:	a9 f7       	brne	.-22     	; 0x580 <__udivmodhi4_loop>
 596:	80 95       	com	r24
 598:	90 95       	com	r25
 59a:	bc 01       	movw	r22, r24
 59c:	cd 01       	movw	r24, r26
 59e:	08 95       	ret

000005a0 <__udivmodsi4>:
 5a0:	a1 e2       	ldi	r26, 0x21	; 33
 5a2:	1a 2e       	mov	r1, r26
 5a4:	aa 1b       	sub	r26, r26
 5a6:	bb 1b       	sub	r27, r27
 5a8:	fd 01       	movw	r30, r26
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <__udivmodsi4_ep>

000005ac <__udivmodsi4_loop>:
 5ac:	aa 1f       	adc	r26, r26
 5ae:	bb 1f       	adc	r27, r27
 5b0:	ee 1f       	adc	r30, r30
 5b2:	ff 1f       	adc	r31, r31
 5b4:	a2 17       	cp	r26, r18
 5b6:	b3 07       	cpc	r27, r19
 5b8:	e4 07       	cpc	r30, r20
 5ba:	f5 07       	cpc	r31, r21
 5bc:	20 f0       	brcs	.+8      	; 0x5c6 <__udivmodsi4_ep>
 5be:	a2 1b       	sub	r26, r18
 5c0:	b3 0b       	sbc	r27, r19
 5c2:	e4 0b       	sbc	r30, r20
 5c4:	f5 0b       	sbc	r31, r21

000005c6 <__udivmodsi4_ep>:
 5c6:	66 1f       	adc	r22, r22
 5c8:	77 1f       	adc	r23, r23
 5ca:	88 1f       	adc	r24, r24
 5cc:	99 1f       	adc	r25, r25
 5ce:	1a 94       	dec	r1
 5d0:	69 f7       	brne	.-38     	; 0x5ac <__udivmodsi4_loop>
 5d2:	60 95       	com	r22
 5d4:	70 95       	com	r23
 5d6:	80 95       	com	r24
 5d8:	90 95       	com	r25
 5da:	9b 01       	movw	r18, r22
 5dc:	ac 01       	movw	r20, r24
 5de:	bd 01       	movw	r22, r26
 5e0:	cf 01       	movw	r24, r30
 5e2:	08 95       	ret

000005e4 <_exit>:
 5e4:	f8 94       	cli

000005e6 <__stop_program>:
 5e6:	ff cf       	rjmp	.-2      	; 0x5e6 <__stop_program>
